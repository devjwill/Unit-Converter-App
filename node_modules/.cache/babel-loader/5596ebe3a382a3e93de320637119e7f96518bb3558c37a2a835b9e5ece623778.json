{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Desktop/Projects/unit-converter-app/src/components/unit-conversion.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport data from '../data';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UnitConversion(_ref) {\n  _s();\n  let {\n    activeUnitType,\n    setActiveUnitType\n  } = _ref;\n  const [firstUnitType, setFirstUnitType] = useState(Object.keys(data.unitTypes[activeUnitType])[0]);\n  const [firstUnitValue, setFirstUnitValue] = useState('');\n  const [secondUnitType, setSecondUnitType] = useState(Object.keys(data.unitTypes[activeUnitType])[0]);\n  const [secondUnitValue, setSecondUnitValue] = useState('');\n  const [answer, setAnswer] = useState();\n  function firstTypeChange(event) {\n    setFirstUnitType(event.target.value);\n    console.log(`The first unit has been changed to ${event.target.value}`);\n  }\n  function secondTypeChange(event) {\n    setSecondUnitType(event.target.value);\n    console.log(`The second unit has been changed to ${event.target.value}`);\n  }\n  function firstValueChange(event) {\n    setFirstUnitValue(event.target.value);\n    console.log(`The first value has been changed to ${event.target.value}`);\n    if (data.unitTypes[activeUnitType][firstUnitType][secondUnitType][0] === 'x') {\n      setAnswer(firstUnitValue * data.unitTypes[activeUnitType][firstUnitType][secondUnitType][1]);\n    } else if (data.unitTypes[activeUnitType][firstUnitType][secondUnitType][0] === '/') {\n      setAnswer(firstUnitValue / data.unitTypes[activeUnitType][firstUnitType][secondUnitType][1]);\n    } else if (firstUnitType === secondUnitType) {\n      setAnswer(firstUnitValue);\n    }\n    console.log(answer);\n  }\n  function secondValueChange(event) {\n    setSecondUnitValue(event.target.value);\n    console.log(`The second value has been changed to ${event.target.value}`);\n  }\n  function formatUnitType(word) {\n    let wordArray = word.match(/[A-Z][a-z]*/g);\n    let wordString = wordArray.join(' ');\n    return wordString;\n  }\n  useEffect(() => {\n    setAnswer(prevState => {});\n  }, [firstUnitValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"From: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"from\",\n          onChange: firstTypeChange,\n          value: firstUnitType,\n          children: Object.keys(data.unitTypes[activeUnitType]).map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              id: item,\n              value: item,\n              children: formatUnitType(item)\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: firstValueChange,\n          value: firstUnitValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"To: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"to\",\n          onChange: secondTypeChange,\n          value: secondUnitType,\n          children: Object.keys(data.unitTypes[activeUnitType]).map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              id: item,\n              value: item,\n              children: formatUnitType(item)\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: secondValueChange,\n          value: secondUnitValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Result: \", answer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(UnitConversion, \"9znhj9pqFMxH3K70gd/ZiOhzdns=\");\n_c = UnitConversion;\nexport default UnitConversion;\nvar _c;\n$RefreshReg$(_c, \"UnitConversion\");","map":{"version":3,"names":["useEffect","useState","data","jsxDEV","_jsxDEV","UnitConversion","_ref","_s","activeUnitType","setActiveUnitType","firstUnitType","setFirstUnitType","Object","keys","unitTypes","firstUnitValue","setFirstUnitValue","secondUnitType","setSecondUnitType","secondUnitValue","setSecondUnitValue","answer","setAnswer","firstTypeChange","event","target","value","console","log","secondTypeChange","firstValueChange","secondValueChange","formatUnitType","word","wordArray","match","wordString","join","prevState","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","map","item","id","type","_c","$RefreshReg$"],"sources":["/Users/dev/Desktop/Projects/unit-converter-app/src/components/unit-conversion.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport data from '../data'\nimport '../App.css'\nfunction UnitConversion ({ activeUnitType, setActiveUnitType }) {\n    const [firstUnitType, setFirstUnitType] = useState(Object.keys(data.unitTypes[activeUnitType])[0])\n    const [firstUnitValue, setFirstUnitValue] = useState('')\n    const [secondUnitType, setSecondUnitType] = useState(Object.keys(data.unitTypes[activeUnitType])[0])\n    const [secondUnitValue, setSecondUnitValue] = useState('')\n    const [answer, setAnswer] = useState()\n\n    function firstTypeChange (event) {\n        setFirstUnitType(event.target.value)\n        console.log(`The first unit has been changed to ${event.target.value}`)\n        }\n    function secondTypeChange (event) {\n        setSecondUnitType(event.target.value)\n        console.log(`The second unit has been changed to ${event.target.value}`)\n    }\n\n    function firstValueChange (event) {\n        setFirstUnitValue(event.target.value)\n        console.log(`The first value has been changed to ${event.target.value}`)\n        if(data.unitTypes[activeUnitType][firstUnitType][secondUnitType][0] === 'x') {\n            setAnswer(firstUnitValue * data.unitTypes[activeUnitType][firstUnitType][secondUnitType][1])\n        } else if (data.unitTypes[activeUnitType][firstUnitType][secondUnitType][0] === '/') {\n            setAnswer(firstUnitValue / data.unitTypes[activeUnitType][firstUnitType][secondUnitType][1])\n        } else if (firstUnitType === secondUnitType) {\n            setAnswer(firstUnitValue)\n        }\n        console.log(answer)\n    }\n\n    function secondValueChange (event) {\n        setSecondUnitValue(event.target.value)\n        console.log(`The second value has been changed to ${event.target.value}`)     \n    }\n\n    function formatUnitType (word) {\n        let wordArray = word.match(/[A-Z][a-z]*/g)\n        let wordString = wordArray.join(' ')\n        return wordString\n    }\n\n    useEffect(() => {\n        setAnswer(prevState => {\n\n        })\n    }, [firstUnitValue])\n\n    return (\n        <div>\n            <form className='form-container'>\n                <div>\n                <label>From: </label>\n                <select name='from' onChange={firstTypeChange} value={firstUnitType}>\n                    {Object.keys(data.unitTypes[activeUnitType]).map(item => {\n                        return (\n                            <option key={item} id={item} value={item}>{formatUnitType(item)}</option>\n                        )\n                    })}\n                </select><br/>\n                <input type='text' onChange={firstValueChange} value={firstUnitValue}></input>\n                </div>\n                <div>\n                <label>To: </label>\n                <select name='to' onChange={secondTypeChange} value={secondUnitType}>\n                    {Object.keys(data.unitTypes[activeUnitType]).map(item => {\n                        return (\n                            <option key={item} id={item} value={item}>{formatUnitType(item)}</option>\n                        )\n                    })}\n                </select><br/>\n                <input type='text' onChange={secondValueChange} value={secondUnitValue}></input>\n                </div>\n            </form>\n            <div>\n                {/* {firstUnitValue || secondUnitValue ? <h3>Result: {firstUnitValue} {firstUnitType} =  </h3> : null} */}\n                <h3>Result: {answer}</h3>\n                {/* <button onClick={console.log(data)}>Log Data</button> */}\n            </div>\n        </div>\n    )\n}\n\nexport default UnitConversion;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}