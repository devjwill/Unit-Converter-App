{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Desktop/Projects/unit-converter-app/src/components/unit-conversion.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport data from '../data';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UnitConversion(_ref) {\n  _s();\n  let {\n    activeUnitType,\n    setActiveUnitType\n  } = _ref;\n  const [firstUnitType, setFirstUnitType] = useState(data.unitTypes[activeUnitType][0]);\n  const [firstUnitValue, setFirstUnitValue] = useState('');\n  const [secondUnitType, setSecondUnitType] = useState();\n  const [secondUnitValue, setSecondUnitValue] = useState('');\n  function firstTypeChange(event) {\n    setFirstUnitType(event.target.value);\n    console.log(`The first unit has been changed to ${event.target.value}`);\n  }\n  function secondTypeChange(event) {\n    setSecondUnitType(event.target.value);\n    console.log(`The second unit has been changed to ${event.target.value}`);\n  }\n  function firstValueChange(event) {\n    setFirstUnitValue(event.target.value);\n    console.log(`The first value has been changed to ${event.target.value}`);\n  }\n  function secondValueChange(event) {\n    setSecondUnitValue(event.target.value);\n    console.log(`The second value has been changed to ${event.target.value}`);\n  }\n  function formatUnitType(word) {\n    let wordArray = word.match(/[A-Z][a-z]*/g);\n    let wordString = wordArray.join(' ');\n    return wordString;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"From: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"from\",\n          onChange: firstTypeChange,\n          value: firstUnitType,\n          children: Object.keys(data.unitTypes[activeUnitType]).map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              id: item,\n              value: item,\n              children: formatUnitType(item)\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: firstValueChange,\n          value: firstUnitValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"To: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"to\",\n          onChange: secondTypeChange,\n          value: secondUnitType,\n          children: Object.keys(data.unitTypes[activeUnitType]).map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              id: item,\n              value: item,\n              children: formatUnitType(item)\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: secondValueChange,\n          value: secondUnitValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: firstUnitValue ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Result: \", firstUnitValue, \" \", firstUnitType, \" =  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 35\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(UnitConversion, \"dzmppyZMF7jeFGlmXSP0/2QRd8Y=\");\n_c = UnitConversion;\nexport default UnitConversion;\nvar _c;\n$RefreshReg$(_c, \"UnitConversion\");","map":{"version":3,"names":["useState","data","jsxDEV","_jsxDEV","UnitConversion","_ref","_s","activeUnitType","setActiveUnitType","firstUnitType","setFirstUnitType","unitTypes","firstUnitValue","setFirstUnitValue","secondUnitType","setSecondUnitType","secondUnitValue","setSecondUnitValue","firstTypeChange","event","target","value","console","log","secondTypeChange","firstValueChange","secondValueChange","formatUnitType","word","wordArray","match","wordString","join","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","Object","keys","map","item","id","type","_c","$RefreshReg$"],"sources":["/Users/dev/Desktop/Projects/unit-converter-app/src/components/unit-conversion.js"],"sourcesContent":["import { useState } from 'react';\nimport data from '../data'\nimport '../App.css'\nfunction UnitConversion ({ activeUnitType, setActiveUnitType }) {\n    const [firstUnitType, setFirstUnitType] = useState(data.unitTypes[activeUnitType][0])\n    const [firstUnitValue, setFirstUnitValue] = useState('')\n    const [secondUnitType, setSecondUnitType] = useState()\n    const [secondUnitValue, setSecondUnitValue] = useState('')\n\n    function firstTypeChange (event) {\n        setFirstUnitType(event.target.value)\n        console.log(`The first unit has been changed to ${event.target.value}`)\n        }\n    function secondTypeChange (event) {\n        setSecondUnitType(event.target.value)\n        console.log(`The second unit has been changed to ${event.target.value}`)\n    }\n\n    function firstValueChange (event) {\n        setFirstUnitValue(event.target.value)\n        console.log(`The first value has been changed to ${event.target.value}`)\n    }\n\n    function secondValueChange (event) {\n        setSecondUnitValue(event.target.value)\n        console.log(`The second value has been changed to ${event.target.value}`)     \n    }\n\n    function formatUnitType (word) {\n        let wordArray = word.match(/[A-Z][a-z]*/g)\n        let wordString = wordArray.join(' ')\n        return wordString\n    }\n\n    return (\n        <div>\n            <form className='form-container'>\n                <div>\n                <label>From: </label>\n                <select name='from' onChange={firstTypeChange} value={firstUnitType}>\n                    {Object.keys(data.unitTypes[activeUnitType]).map(item => {\n                        return (\n                            <option key={item} id={item} value={item}>{formatUnitType(item)}</option>\n                        )\n                    })}\n                </select><br/>\n                <input type='text' onChange={firstValueChange} value={firstUnitValue}></input>\n                </div>\n                <div>\n                <label>To: </label>\n                <select name='to' onChange={secondTypeChange} value={secondUnitType}>\n                    {Object.keys(data.unitTypes[activeUnitType]).map(item => {\n                        return (\n                            <option key={item} id={item} value={item}>{formatUnitType(item)}</option>\n                        )\n                    })}\n                </select><br/>\n                <input type='text' onChange={secondValueChange} value={secondUnitValue}></input>\n                </div>\n            </form>\n            <div>\n                {firstUnitValue ? <h3>Result: {firstUnitValue} {firstUnitType} =  </h3> : null}\n            </div>\n        </div>\n    )\n}\n\nexport default UnitConversion;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}